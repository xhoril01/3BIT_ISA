TEST_1: Help statement
=====================================

TEST_2: Help statement with other flags
=====================================

TEST_3: No flags
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

TEST_4: -T flag
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

TEST_5: -u flag
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

TEST_6: -a flag
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

TEST_7: -a -u flag
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

TEST_8: -a -T flag
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

TEST_9: -u -T flag
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

TEST_10: -u -T -a flag
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

TEST_11: Wrong <certaddr> with -C
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @file classes.cpp'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @author Denis HORIL (xhoril01@stud.fit.vutbr.cz)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief ISA Projekt - Pomocny subor k hlavnemu suboru 'feedreader.cpp''
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @version 0.1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @date 2022-10-07'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @copyright Copyright (c) 2022'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '*/'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Errors handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n")); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            fprintf(stderr,(_m "\n"), ##__VA_ARGS__); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Destructors'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio) BIO_free_all(bio); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(ctx) SSL_CTX_free(ctx); \'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Use(ful|less) macros'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// #define RDF_FEED 1'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'using namespace std;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '// Global variables for better interruption handling'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'BIO *bio;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL_CTX *ctx;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'SSL *ssl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsed URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct parsedURL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string scheme;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string host;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::stringstream authority;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Feed information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> URLList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Author information'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct Author'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string name;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string email;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Content from XML file given by response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'struct XMLContent'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string title;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<std::string> aURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::vector<Author> authors;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::string time;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Checking URL scheme'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param scheme Scheme from URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param str HTTP or HTTPS'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool schemeCheck(std::string scheme, std::string str)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(scheme.compare(str) == 0) return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '/**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @brief Parsing URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @param parsedURL Structure where parsed URL will be stored'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return true if successful'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : ' */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'bool checkURL(std::string url, parsedURL *parsedURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::regex regexExpr ("^(https?)://([^:?#/]+)(:([0-9]+))?(.*)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    std::smatch matches;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(!std::regex_match(url, matches, regexExpr)) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        ERR_STAT_ARG("Incorrect URL : '%s'\nOnly 'http' and 'https' schemes are allowed",url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        return false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->scheme = matches[1];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->host = matches[2];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->path = matches[5];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    if(matches[3].str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        if(schemeCheck(matches[1], "http")) parsedURL->port = "80";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        else if(schemeCheck(matches[1], "https")) parsedURL->port = "443";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    else parsedURL->port = matches[4];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    parsedURL->authority << parsedURL->host << ':' << parsedURL->port;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    return true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Args'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream url;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream feedFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certFile;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::stringstream certAddr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool timeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool authorFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool assocURLFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool helpFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing arguments from command line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argc '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param argv '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int argsProcesser(int argc, char** argv)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            opterr = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const char* const paramShort = "f:c:C:Tuah";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            const option paramLong[]='
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {"help", no_argument, nullptr, 'h'},'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {nullptr, no_argument, nullptr, 0}'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            };'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int arg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Getting arguments from cmd line'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while((arg = getopt_long(argc,argv,paramShort, paramLong, nullptr)) != -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                switch(arg)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'f':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            feedFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'c':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certFile << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'C':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            certAddr << optarg;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'T':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            timeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'u':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            assocURLFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'a':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            authorFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case 'h':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            helpFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            printHelp();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    case '?':'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            if(optopt == 'f' || optopt == 'c' || optopt == 'C')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT("-f, -c and -C flags require argument.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else if(isprint(optopt))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown flag: -%c.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                ERR_STAT_ARG("Unknown character: %02x.",optopt);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            } '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    default: '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            ERR_STAT("Argument processing failed.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            return -1;           '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Magic'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(optind < argc && (argc-optind) <= 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                url << argv[optind];'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if((argc-optind) > 1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!helpFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT("None or unknown parameter was given");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Returns URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return url.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <feedfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getFeedFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return feedFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path <certfile>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertFile()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certFile.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the path to <certaddr>'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string getCertAddr()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return certAddr.str();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -T defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -T was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isTime()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return timeFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -a defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -a was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAuthor()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return authorFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -u defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -u was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isAssocURL()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return assocURLFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Was -h or --help defined?'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return true if -h or --help was defined'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return false otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        bool isHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return helpFlag;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Required arguments check'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 if it is successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int reqArgsCheck()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(url.str().empty() && feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else if (!url.str().empty() && !feedFile.str().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT("One of 'url' or '-f <feedfile>' argument is required, but NOT both.");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Help statement'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printHelp()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "\n=================================================== HELP ==================================================" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|   USAGE: feedreader <URL | -f <feedfile>> [-c <certfile>] [-C <certaddr>] [-T] [-u] [-a] [-h | --help]   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                 URL - resource URL                                                                       |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -f <feedfile> - path to feedfile                                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -c <certfile> - path to file with certificates                                                     |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|       -C <certaddr> - path to directory with certficates                                                 |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -T - display last edit time or creation time (if available)                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -u - display associated URLs (if available)                                             |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                  -a - display information about author (if available)                                    |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * One of arguments <URL> or <-f <feedfile>> must be defined, but NOT both.                              |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * If <-c <certfile>> or <-C <certaddr>> are not defined, 'SSL_CTX_set_default_verify_paths()' function  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|    will be used.                                                                                         |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * While HTTP communication with server, redirecting is NOT implemented                                  |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|  * In URL can be optionally specificated 'port number'                                                   |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "|                                                                                                          |" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "============================================================================================================\n" <<endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : 'class Process'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '{'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    private:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        Feed feed;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '    public:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Set the path of feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param path '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void setPath(std::string path)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            feed.path = path;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Creating list of URLs from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int feedfile2List()'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ifstream file(feed.path);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string data;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            try'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!file.is_open()) throw std::exception();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(getline(file,data))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(!data.empty() && data.front() != '#')'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        feed.URLList.push_back(data);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                file.close();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            catch(std::exception &e)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Cannot open file: %s",feed.path.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Connecting every URL from feedfile'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void loopConnect(Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(std::string url : feed.URLList)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                parsedURL myURL;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!checkURL(url, &myURL)) continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(connect(&myURL, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {                 '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    continue;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Conecting to given URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param pURL URL parsed to scheme, authority, etc.'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int - 0 if succesful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int connect(parsedURL *pURL, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_load_error_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            ERR_load_BIO_strings();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            OpenSSL_add_all_algorithms();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            SSL_library_init();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // Unsecure connection'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "http"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_connect(pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ctx = SSL_CTX_new(SSLv23_client_method());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                int verify = 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                   args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_set_default_verify_paths(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty() &&'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        !args->getCertAddr().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx, args->getCertFile().c_str(), args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else if(!args->getCertFile().empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,args->getCertFile().c_str(),nullptr);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        verify = SSL_CTX_load_verify_locations(ctx,nullptr, args->getCertAddr().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(verify == 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio error: %s on url '%s'",ERR_error_string(ERR_get_error(),nullptr),url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                bio = BIO_new_ssl_connect(ctx);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(bio == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_get_ssl(bio, &ssl);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_mode(ssl, SSL_MODE_AUTO_RETRY);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                BIO_set_conn_hostname(bio, pURL->authority.str().c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                SSL_set_tlsext_host_name(ssl, pURL->host.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_do_connect(bio) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, connection failed on url '%s'", ERR_error_string(ERR_get_error(), nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(schemeCheck(pURL->scheme, "https") && (SSL_get_verify_result(ssl) != X509_V_OK))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio error: %s, certificates verification failed on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream request;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "GET " << pURL->path << " HTTP/1.1\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Host: " << pURL->authority.str() << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Accept: */*\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "Connection: Close\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            request << "\r\n";'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool writeFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(BIO_write(bio, request.str().c_str(), request.str().size()) <= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(BIO_write(bio, request.str().c_str(), request.str().size()) > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            else writeFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!writeFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Bio write error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            char buffer[2048] = {'\0'};'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::stringstream response;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            bool readFlag = false;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            while(bytes != 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                while(BIO_should_retry(bio))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(bytes >= 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    if(bytes > 0)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        buffer[bytes] = '\0';'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        response << buffer;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    readFlag = true;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    bytes = BIO_read(bio, buffer, 2048-1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!readFlag)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    ERR_STAT_ARG("Bio read error: %s, on url '%s'", ERR_error_string(ERR_get_error(),nullptr), url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string XMLFile = responseProcess(response.str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(XMLFile.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            { '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Invalid HTTP response on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(parseXML(XMLFile, args, url) == -1)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            IM_FREEEEE;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Processing HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param response HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::string - returns XML file parsed from response,'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         *                       NULL if response is invalid'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::string responseProcess(std::string response)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string httpCode;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            httpCode.assign(response.begin(), response.begin()+response.find("\r\n"));'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::regex reg("^(HTTP/[0-9]\\.[0-9]\\s2[0-9][0-9]\\s[a-zA-Z]+)$");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!regex_match(httpCode,reg))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosStart = response.find("<");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            int contPosEnd = response.find_last_of(">");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            body.assign(response.begin()+contPosStart, response.begin()+contPosEnd+1);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return body;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing given XML file from HTTP response'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param file XML file'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param url Actual URL'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 0 of successful, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int parseXML(std::string file, Args *args, std::string url)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            LIBXML_TEST_VERSION'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlDocPtr doc = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlNodePtr rootNode = nullptr;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((doc = xmlParseDoc((const xmlChar *)file.c_str())) == nullptr) '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Parsing given XML file on url '%s' failed", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if((rootNode = xmlDocGetRootElement(doc)) == nullptr)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing root element in XML file on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> content2print;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::string feedTitle;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            switch(getFeedType(rootNode))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RDF_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rdfFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case RSS_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = rssFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                case ATOM_FEED:'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        content2print = atomFeed(rootNode, &feedTitle);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                default: break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(content2print.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Unknown feed type on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(feedTitle.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                ERR_STAT_ARG("Missing title of the feed on url '%s'", url.c_str());'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                return -1;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            printInfo(content2print, feedTitle, args);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlFreeDoc(doc);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return 0;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Get the Feed type'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return int 1,2 or 3 depending on type of feed, -1 otherwise'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        int getFeedType(xmlNodePtr rootNode)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            // if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rdf")) return RDF_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"rss")) return RSS_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            if(!xmlStrcmp(rootNode->name, (const xmlChar*)"feed")) return ATOM_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return UNKNOWN_FEED;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 1.0 a.k.a. RDF feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /*'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rdfFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);       '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            break;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:creator"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"dc:date"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing RSS 2.0 feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> rssFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {   '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"channel"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"item"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr itemNode = childNode->xmlChildrenNode; itemNode; itemNode = itemNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode); '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);              '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '               '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(itemNode->name, (const xmlChar*)"pubDate"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(itemNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Parsing Atom feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param rootNode Root element of parsed document'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Pointer to main title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @return std::vector<XMLContent> List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        std::vector<XMLContent> atomFeed(xmlNodePtr rootNode, std::string *title)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            XMLContent write;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            Author author;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            std::vector<XMLContent> writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlChar *content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(xmlNodePtr curNode = rootNode->xmlChildrenNode; curNode; curNode = curNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    content = xmlNodeGetContent(curNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    *title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr authorNode = curNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(!xmlStrcmp(curNode->name, (const xmlChar*)"entry"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(xmlNodePtr childNode = curNode->xmlChildrenNode; childNode; childNode = childNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"title"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.title = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"updated"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlNodeGetContent(childNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.time = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"author"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            for(xmlNodePtr authorNode = childNode->xmlChildrenNode; authorNode; authorNode = authorNode->next)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"name"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.name = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                if(!xmlStrcmp(authorNode->name, (const xmlChar*)"email"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    content = xmlNodeGetContent(authorNode);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    author.email = (char*)content;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                    xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!xmlStrcmp(childNode->name, (const xmlChar*)"link"))'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            content = xmlGetProp(childNode,(const xmlChar*)"href");'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.aURL.push_back((char*)content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            xmlFree(content);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(write.authors.empty() && !author.name.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            write.authors.push_back(author);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    writeList.push_back(write);'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.aURL.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.authors.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.time.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    write.title.clear();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            xmlCleanupParser();'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return writeList;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        /**'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @brief Print parsed items on standard output'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * '
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param content List of parsed items'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param title Title of the feed'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         * @param args Class with command line arguments'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '         */'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        void printInfo(std::vector<XMLContent> content, std::string title, Args *args)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            cout << "*** " << title.c_str() << " ***" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            for(XMLContent cont : content)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(cont.title.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "<No Title>" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                else cout << cont.title.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isTime() && !cont.time.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    cout << "Updated: " << cont.time.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAuthor() && !cont.authors.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(Author author : cont.authors)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        if(!author.email.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                            cout << "Author: " << author.name.c_str() << " (" << author.email.c_str() << ")" << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        else cout << "Author: " << author.name.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                if(args->isAssocURL() && !cont.aURL.empty())'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    for(std::string url : cont.aURL)'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    {'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                        cout << "URL: " << url.c_str() << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                    }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '                cout << endl;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '            return;'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '        }'
Only 'http' and 'https' schemes are allowed
Incorrect URL : '};'
Only 'http' and 'https' schemes are allowed
=====================================

